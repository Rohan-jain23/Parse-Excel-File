{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as XLSX from 'xlsx';\nlet FileUploadComponent = class FileUploadComponent {\n  constructor(fileUploadService) {\n    this.fileUploadService = fileUploadService;\n    this.file = null;\n    this.name = \"\";\n    this.timestamp = new Date().toISOString();\n    this.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    this.browser = window.navigator.userAgent;\n    this.myGroup = new FormGroup({\n      chartname: new FormControl()\n    });\n  }\n  onFileSelected(event) {\n    //this.file = event.target.files[0];\n    let file = event.target.files[0];\n    let fileReader = new FileReader();\n    fileReader.readAsBinaryString(file);\n    fileReader.onload = e => {\n      var workBook = XLSX.read(fileReader.result, {\n        type: 'binary'\n      });\n      var sheetNames = workBook.SheetNames;\n      this.ExcelData = XLSX.utils.sheet_to_json(workBook.Sheets[sheetNames[0]]);\n      console.log(this.ExcelData);\n    };\n  }\n  onSubmit() {\n    this.name = this.myGroup.value.chartname;\n    if (!this.file) {\n      // alert('Please select a file to upload');\n      return;\n    }\n    this.fileUploadService.uploadFile(this.file, this.name, this.timestamp, this.timezone, this.browser).subscribe(response => console.log(response), error => console.log(error));\n  }\n};\nFileUploadComponent = __decorate([Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})], FileUploadComponent);\nexport { FileUploadComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAEC,SAAS,QAAoB,gBAAgB;AAGhF,OAAO,KAAKC,IAAI,MAAM,MAAM;AAOrB,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAW9BC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAVrC,SAAI,GAAgB,IAAI;IACxB,SAAI,GAAW,EAAE;IACjB,cAAS,GAAW,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IAC5C,aAAQ,GAAWC,IAAI,CAACC,cAAc,EAAE,CAACC,eAAe,EAAE,CAACC,QAAQ;IACnE,YAAO,GAAWC,MAAM,CAACC,SAAS,CAACC,SAAS;IAE5C,YAAO,GAAG,IAAIb,SAAS,CAAC;MACtBc,SAAS,EAAE,IAAIf,WAAW;KAC7B,CAAC;EAGA;EAEAgB,cAAc,CAACC,KAAU;IACvB;IACA,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChC,IAAIC,UAAU,GAAG,IAAKC,UAAU,EAAE;IAClCD,UAAU,CAACE,kBAAkB,CAACL,IAAI,CAAC;IACnCG,UAAU,CAACG,MAAM,GAAGC,CAAC,IAAG;MACtB,IAAIC,QAAQ,GAAExB,IAAI,CAACyB,IAAI,CAACN,UAAU,CAACO,MAAM,EAAC;QAACC,IAAI,EAAC;MAAQ,CAAC,CAAC;MAC1D,IAAIC,UAAU,GAAGJ,QAAQ,CAACK,UAAU;MACpC,IAAI,CAACC,SAAS,GAAG9B,IAAI,CAAC+B,KAAK,CAACC,aAAa,CAACR,QAAQ,CAACS,MAAM,CAACL,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MACzEM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,SAAS,CAAC;IAC7B,CAAC;EACH;EACAM,QAAQ;IAEJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC1B,SAAS;IAC1C,IAAI,CAAC,IAAI,CAACG,IAAI,EAAE;MACf;MACC;;IAGF,IAAI,CAACb,iBAAiB,CAACqC,UAAU,CAAC,IAAI,CAACxB,IAAI,EAAE,IAAI,CAACqB,IAAI,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,OAAO,CAAC,CACjGC,SAAS,CACPC,QAAQ,IAAKX,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC,EAClCC,KAAK,IAAKZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC,CAC9B;EACL;CACD;AAxCY7C,mBAAmB,eAL/BJ,SAAS,CAAC;EACTkD,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWhD,mBAAmB,CAwC/B;SAxCYA,mBAAmB","names":["Component","FormControl","FormGroup","XLSX","FileUploadComponent","constructor","fileUploadService","Date","toISOString","Intl","DateTimeFormat","resolvedOptions","timeZone","window","navigator","userAgent","chartname","onFileSelected","event","file","target","files","fileReader","FileReader","readAsBinaryString","onload","e","workBook","read","result","type","sheetNames","SheetNames","ExcelData","utils","sheet_to_json","Sheets","console","log","onSubmit","name","myGroup","value","uploadFile","timestamp","timezone","browser","subscribe","response","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jainroh\\source\\repos\\WebApplication16\\WebApplication16\\angular-app\\src\\app\\file-upload\\file-upload.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FileUploadService } from '../file-upload.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as XLSX from 'xlsx'\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent {\n  file: File | null = null;\n  name: string = \"\";\n  timestamp: string = new Date().toISOString();\n  timezone: string = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  browser: string = window.navigator.userAgent;\n  ExcelData: any;\n  myGroup = new FormGroup({\n    chartname: new FormControl()\n});\n\n  constructor(private fileUploadService: FileUploadService) {\n  }\n\n  onFileSelected(event: any) {\n    //this.file = event.target.files[0];\n    let file = event.target.files[0];\n    let fileReader = new  FileReader();\n    fileReader.readAsBinaryString(file);\n    fileReader.onload =(e)=>{\n      var workBook =XLSX.read(fileReader.result,{type:'binary'});\n      var sheetNames = workBook.SheetNames;\n      this.ExcelData = XLSX.utils.sheet_to_json(workBook.Sheets[sheetNames[0]])\n      console.log(this.ExcelData)\n    }\n  }\n  onSubmit() {\n\n      this.name = this.myGroup.value.chartname;\n    if (!this.file) {\n     // alert('Please select a file to upload');\n      return;\n    }\n\n    this.fileUploadService.uploadFile(this.file, this.name, this.timestamp, this.timezone, this.browser)\n      .subscribe(\n        (response) => console.log(response),\n        (error) => console.log(error)\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}